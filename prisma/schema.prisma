generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_URL")
}

// Model Format
// 
// model ModelName {
//   Data Fields
//   
//   Time Fields
//
//   Related Models
//
//   Unique/Id Specifiers
// }

// Application Tables

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  createdAt DateTime @default(now())

  authoredResources  Resource[]
  authoredRoadmaps   Roadmap[]
  subscribedRoadmaps RoadmapLearner[]
  accounts           Account[]
  sessions           Session[]
}

model Resource {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  url         String
  type        ResourceType
  authorId    String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  author User            @relation(fields: [authorId], references: [id])
  blocks ResourceBlock[]
}

enum ResourceType {
  VIDEO
  BLOG
  TUTORIAL
  DOCUMENT
  PAPER
}

model Roadmap {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  authorId    String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  author   User             @relation(fields: [authorId], references: [id])
  learners RoadmapLearner[]
  blocks   Block[]
}

model Block {
  id        Int @id @default(autoincrement())
  roadmapId Int
  order     Int

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  roadmap       Roadmap        @relation(fields: [roadmapId], references: [id])
  resourceBlock ResourceBlock?
  noteBlock     NoteBlock?
}

enum BlockType {
  RESOURCE
  NOTE
}

model ResourceBlock {
  id         Int @id
  resourceId Int

  block    Block    @relation(fields: [id], references: [id])
  resource Resource @relation(fields: [resourceId], references: [id])
}

model NoteBlock {
  id      Int     @id
  title   String?
  content String

  block Block @relation(fields: [id], references: [id])
}

model RoadmapLearner {
  roadmapId Int
  userId    String

  createdAt DateTime @default(now())

  roadmap Roadmap @relation(fields: [roadmapId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@unique([roadmapId, userId])
}

// Authentication Tables

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
